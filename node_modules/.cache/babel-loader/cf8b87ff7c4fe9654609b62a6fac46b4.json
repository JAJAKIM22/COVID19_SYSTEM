{"ast":null,"code":"var _jsxFileName = \"/home/jaja/COVID19_SYSTEM/src/Chart.js\";\nimport React from \"react\";\nimport { LineChart, ResponsiveContainer, Legend, Tooltip, Line, XAxis, YAxis, CartesianGrid } from 'recharts';\nfunction Chart(_ref) {\n  var pdata = _ref.pdata,\n    pTime = _ref.pTime,\n    pCases = _ref.pCases,\n    pDeaths = _ref.pDeaths,\n    pTests = _ref.pTests;\n  //     const [chart, setChart] = useState([]);\n\n  //   const options = {\n  //     method: 'GET',\n  //     headers: {\n  //         'X-RapidAPI-Key': '05b4a1e1d0msh7eefee18e7eb6e6p150558jsn3c0c2db9d4ee',\n  //         'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\n  //     }\n  // };\n  // useEffect(() => {\n  //     fetch(`https://covid-193.p.rapidapi.com/history?country=usa&day=2020-06-02&time=T20:45:06+00:00`, options)\n  //             .then((res) => res.json())\n  //             .then((chart) => {\n  //                 console.log(chart.response)\n  //                 setChart(chart.response);\n  //     });\n  // }, []);\n  // const pdata = chart.map( (chart, index )=> (<Chart key={index} pTime={chart.time}  pCases={chart.cases.total} pDeaths={chart.deaths.total}  pTests={chart.tests.total} />))\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    aspect: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: pdata,\n    margin: {\n      right: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: pTime,\n    interval: 'preserveStartEnd',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    dataKey: pCases,\n    stroke: \"blue\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    dataKey: pDeaths,\n    stroke: \"green\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    dataKey: pTests,\n    stroke: \"yellow\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }))));\n}\nexport default Chart;","map":{"version":3,"names":["React","LineChart","ResponsiveContainer","Legend","Tooltip","Line","XAxis","YAxis","CartesianGrid","Chart","pdata","pTime","pCases","pDeaths","pTests","right","r"],"sources":["/home/jaja/COVID19_SYSTEM/src/Chart.js"],"sourcesContent":["import React  from \"react\";\nimport {\n    LineChart,\n    ResponsiveContainer,\n    Legend, Tooltip,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid\n} from 'recharts';\nfunction Chart({ pdata, pTime, pCases, pDeaths, pTests}) {\n//     const [chart, setChart] = useState([]);\n\n//   const options = {\n//     method: 'GET',\n//     headers: {\n//         'X-RapidAPI-Key': '05b4a1e1d0msh7eefee18e7eb6e6p150558jsn3c0c2db9d4ee',\n//         'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\n//     }\n// };\n// useEffect(() => {\n//     fetch(`https://covid-193.p.rapidapi.com/history?country=usa&day=2020-06-02&time=T20:45:06+00:00`, options)\n//             .then((res) => res.json())\n//             .then((chart) => {\n//                 console.log(chart.response)\n//                 setChart(chart.response);\n        //     });\n        // }, []);\n    // const pdata = chart.map( (chart, index )=> (<Chart key={index} pTime={chart.time}  pCases={chart.cases.total} pDeaths={chart.deaths.total}  pTests={chart.tests.total} />))\n\n    return (\n        <div>\n        <ResponsiveContainer width=\"100%\" aspect={3}>\n            <LineChart data={pdata}  margin={{ right: 300 }}>\n                <CartesianGrid />\n                <XAxis dataKey={pTime}\n                    interval={'preserveStartEnd'} />\n                <YAxis></YAxis>\n                <Legend />\n                <Tooltip />\n                <Line dataKey={pCases}\n                    stroke=\"blue\" activeDot={{ r: 8 }} />\n                <Line dataKey={pDeaths}\n                    stroke=\"green\" activeDot={{ r: 8 }} />\n                <Line dataKey={pTests}\n                    stroke=\"yellow\" activeDot={{ r: 8 }} />\n            </LineChart>\n        </ResponsiveContainer>\n    </div>\n        );\n    }\n    \n    export default Chart;"],"mappings":";AAAA,OAAOA,KAAK,MAAO,OAAO;AAC1B,SACIC,SAAS,EACTC,mBAAmB,EACnBC,MAAM,EAAEC,OAAO,EACfC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,QACV,UAAU;AACjB,SAASC,KAAK,OAA2C;EAAA,IAAxCC,KAAK,QAALA,KAAK;IAAEC,KAAK,QAALA,KAAK;IAAEC,MAAM,QAANA,MAAM;IAAEC,OAAO,QAAPA,OAAO;IAAEC,MAAM,QAANA,MAAM;EACtD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACQ;EACA;EACJ;;EAEA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,mBAAmB;IAAC,KAAK,EAAC,MAAM;IAAC,MAAM,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxC,oBAAC,SAAS;IAAC,IAAI,EAAEJ,KAAM;IAAE,MAAM,EAAE;MAAEK,KAAK,EAAE;IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5C,oBAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACjB,oBAAC,KAAK;IAAC,OAAO,EAAEJ,KAAM;IAClB,QAAQ,EAAE,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACpC,oBAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,eACf,oBAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACV,oBAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACX,oBAAC,IAAI;IAAC,OAAO,EAAEC,MAAO;IAClB,MAAM,EAAC,MAAM;IAAC,SAAS,EAAE;MAAEI,CAAC,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACzC,oBAAC,IAAI;IAAC,OAAO,EAAEH,OAAQ;IACnB,MAAM,EAAC,OAAO;IAAC,SAAS,EAAE;MAAEG,CAAC,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC1C,oBAAC,IAAI;IAAC,OAAO,EAAEF,MAAO;IAClB,MAAM,EAAC,QAAQ;IAAC,SAAS,EAAE;MAAEE,CAAC,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACnC,CACM,CACpB;AAEN;AAEA,eAAeP,KAAK"},"metadata":{},"sourceType":"module"}